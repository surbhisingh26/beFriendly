<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
        <script src="js/jquery-3.2.1.min.js"></script>
        <!-- Include all compiled plugins (below), or include individual files as needed -->
        <script src="js/popper.min.js"></script>
        <script src="js/bootstrap.min.js"></script>
        <!-- Rev slider js -->
        
        <!--Tweets-->
       <!-- <script src="fancy/vendors/tweet/tweetie.min.js"></script>
        <script src="fancy/vendors/tweet/script.js"></script>-->
	
		<script src="js/popper.js"></script>
		<script src="js/main.js"></script>
		<script src="js/check.js"></script>
		
		
    <script src="material-lite/assets/plugins/bootstrap/js/tether.min.js"></script>
    
    <script src="material-lite/js/jquery.slimscroll.js"></script>
    <script src="material-lite/js/waves.js"></script>
    <script src="material-lite/js/sidebarmenu.js"></script>
    <script src="material-lite/assets/plugins/sticky-kit-master/dist/sticky-kit.min.js"></script>
    <script src="material-lite/js/custom.min.js"></script>
 <!--   <script src="material-lite/assets/plugins/chartist-js/dist/chartist.min.js"></script>
    <script src="material-lite/assets/plugins/chartist-plugin-tooltip-master/dist/chartist-plugin-tooltip.min.js"></script>-->
  
    <script src="material-lite/assets/plugins/d3/d3.min.js"></script>
    <script src="material-lite/assets/plugins/c3-master/c3.min.js"></script>
   
    <script src="material-lite/js/dashboard1.js"></script>
	<script src="material-lite/assets/plugins/sparkline/jquery.sparkline.min.js"></script>
	<!--<script src="material-lite/assets/plugins/echarts/echarts-all.js"></script>
	<script src="material-lite/assets/plugins/vectormap/jquery-jvectormap-2.0.2.min.js"></script>
	<script src="material-lite/assets/plugins/vectormap/jquery-jvectormap-world-mill-en.js"></script>
	<script src='material-lite/assets/plugins/calendar/dist/fullcalendar.min.js'></script>
	<script src="material-lite/assets/plugins/calendar/dist/jquery.fullcalendar.js"></script>
	<script src="material-lite/assets/plugins/calendar/dist/cal-init.js"></script>-->
	<script src="material-lite/assets/plugins/styleswitcher/jQuery.style.switcher.js"></script>
	<script src="material-lite/assets/plugins/dropzone-master/dist/dropzone.js"></script>
	
	
	<script src="js/highcharts.js"></script>
	<script src="js/moment.js"></script>
	

	<script>
	$('.notification').click(function(){
	var request = $.ajax({
	url:"notifications",
	method:"POST",
	dataType:"json"
	});
	request.done(function(response) {
	var now = moment();

	for(var count = 0;count<response.count;count++){
	console.log(response.notifyList[count].purpose);
	$('.message-center').append('<a href="'+response.notifyList[count].link+'?read=true&id='+response.notifyList[count].id+'"><img src="'+response.notifyList[count].image+'" width="40px" height="40px" style="margin-right:5px" class="img-circle"><div class="mail-content"> <h5>'+response.notifyList[count].purpose+'</h5> <span class="mail-desc">'+response.notifyList[count].notification+'</span><small class="time notiTime'+response.notifyList[count].id+'"></small> </div></a>')
	
	var time = moment(response.notifyList[count].date,'MMM DD,YYYY HH:mm:ss A');
	if(time.isValid()) {
	var Days =  moment.duration(now - time).days();
	
var Hours =  moment.duration(now - time).hours();
var Minutes =  moment.duration(now - time).minutes();
var Seconds =  moment.duration(now - time).seconds();



if(Days!=0){
if(Days==1)
$('.notiTime'+response.notifyList[count].id).text("yesterday at " + time.format('HH:mm a'));
else if(Days>1)
$('.notiTime'+response.notifyList[count].id).text(time.format('DD MMM YYYY HH:mm a'));
}
else if(Hours!=0){
if(Hours==1)
$('.notiTime'+response.notifyList[count].id).text(Hours+" hour ago");
else
$('.notiTime'+response.notifyList[count].id).text(Hours+" hours ago");
}
else if(Minutes!=0)

$('.notiTime'+response.notifyList[count].id).text(Minutes+" minutes ago");
else if(Seconds!=0)
$('.notiTime'+response.notifyList[count].id).text("Just now");
	}
	}
	});
	});
	</script>
	<script>
	
	function getTimeAgo(elementIdentifier) {
	var now = moment();
		$(elementIdentifier).each(function(){
		var me = $(this);
		var oldValue = moment($(me).text(),'ddd MMM DD hh:mm:ss IST yyyy');
		var timeAgoVal = "";
		if(moment(oldValue,'ddd MMM DD hh:mm:ss IST yyyy').isValid()){
			var Days =  moment.duration(now - oldValue).days();
			var Hours =  moment.duration(now - oldValue).hours();
			var Minutes =  moment.duration(now - oldValue).minutes();
			var Seconds =  moment.duration(now - oldValue).seconds();
			if(Days!=0){
			if(Days==1)
			timeAgoVal = "yesterday at " + oldValue.format('hh:mm a');
			else if(Days>1)
			timeAgoVal = oldValue.format('DD MMM YYYY hh:mm a');
			}
			else if(Hours!=0){
			if(Hours==1)
			timeAgoVal = Hours+" hour ago";
			else
			timeAgoVal = Hours+" hours ago";
			}
			else if(Minutes!=0)

			timeAgoVal = Minutes+" minutes ago";
			else if(Seconds!=0)
			timeAgoVal = "Just now";
			}
		$(me).text(timeAgoVal);
		
		});
	
	}
$(document).ready(function(){
getTimeAgo('.timeAgo');
});

</script>


<script>

function ajaxRequest(url, method, data, extraInfo) {
var request = $.ajax({
	url:url,
	method:method,
	data:data,
	//dataType: (typeof (extraInfo.dataType) != 'undefined')? extraInfo.dataType : 'json', append:true, prepend : true, html:true, boxIdentifier:'box id or class along with # or .'
	});
	request.done(function(response){
	
	if(typeof extraInfo.callback == 'function') {
	
		extraInfo.callback(data, extraInfo, response);
		return false;
	} else if(typeof extraInfo.boxIdentifier != 'undefined') {
		if(typeof extraInfo.append != 'undefined' && extraInfo.append) {
			$(extraInfo.boxIdentifier).append(response);
		} else if(typeof extraInfo.prepend != 'undefined' && extraInfo.prepend) {
			$(extraInfo.boxIdentifier).prepend(response);
		} else if(typeof extraInfo.html != 'undefined' && extraInfo.html) {
			$(extraInfo.boxIdentifier).html(response);
		} else {
			$(extraInfo.boxIdentifier).html(response);
		}
	}
	
	});
}
function afterReject(data, extraInfo, response){
if(response.responseStatus==true){
var id = data.fid;
$('#reject'+id).replaceWith("");
$('#accept'+id).replaceWith('<button type="button" class="btn friend-btn beFriend" id="'+id+'" onclick="ajaxRequest(\'befriend\',\'POST\', {fid:\''+id+'\'},{dataType:\'json\', callback:beFriend})">Be Friend</button>');
}
	else{
	alert("Some Error Occurred!!! Try After Some Time")
	}
}
function afterAccept(data, extraInfo, response){
if(response.responseStatus==true){
var id = data.fid;
$('#reject'+id).replaceWith("");
$('#accept'+id).replaceWith('<div class="btn-group friendBtn" id="'+id+'"><button type="button" class="btn btn-secondary dropdown-toggle friend-btn" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">Friends</button><div class="dropdown-menu" x-placement="top-start" style="position: absolute; transform: translate3d(0px, -196px, 0px); top: 0px; left: 0px; will-change: transform;"><button class="dropdown-item" onclick="ajaxRequest(\'removefriend\', \'POST\', {fid:\''+id+'\'}, {dataType:\'json\', callback:afterRemove})">Remove as Friend</button> </div></div>	');
}
	else{
	alert("Some Error Occurred!!! Try After Some Time")
	}
}
function beFriend(data, extraInfo, response){
var id = data.fid;
if(response.responseStatus==true){
var id = data.fid;
	$('#'+id).replaceWith('<div class="btn-group sentBtn" id="'+id+'"><button type="button" class="btn btn-secondary dropdown-toggle friend-btn" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">Request Sent</button><div class="dropdown-menu" x-placement="top-start" style="position: absolute; transform: translate3d(0px, -196px, 0px); top: 0px; left: 0px; will-change: transform;"><button type="button" class="dropdown-item" onclick="ajaxRequest(\'cancelfriendrequest\', \'POST\', {fid:\''+id+'\'}, {dataType:\'json\', callback:afterCancel})">Cancel Request</button></div></div>');
	}
	else{
	alert("Some Error Occurred!!! Try After Some Time")
	}
	}
	function afterCancel(data, extraInfo, response){
	if(response.responseStatus==true){
	var id = data.fid;
	$('#'+id).replaceWith('<button type="button" class="btn friend-btn beFriend" id="'+id+'" onclick="ajaxRequest(\'befriend\',\'POST\', {fid:\''+id+'\'},{dataType:\'json\', callback:beFriend})">Be Friend</button>');
	}
	else{
	alert("Some Error Occurred!!! Try After Some Time")
	}
	}
	function afterRemove(data, extraInfo, response){
	if(response.responseStatus==true){
	var id = data.fid;
	$('#'+id).replaceWith('<button type="button" class="btn friend-btn beFriend" id="'+id+'" onclick="ajaxRequest(\'befriend\',\'POST\', {fid:\''+id+'\'},{dataType:\'json\', callback:beFriend})">Be Friend</button>');
	}
	else{
	alert("Some Error Occurred!!! Try After Some Time")
	}
	}
	
	
function commentBox(data, extraInfo, response){
	console.log(data);
	console.log(response);

	if($('.timeline' + data.typeId + ' .divBox').css('display')=='none'){
			$('.timeline' + data.typeId + ' .divBox').css('display','inline');
			if(response.count==1)
			$('.timeline' + data.typeId + ' .comment').text(response.count + " Comment");
			else if(response.count>1)
			$('.timeline' + data.typeId + ' .comment').text(response.count + " Comments");
			$.each(response.commentList, function(k, v){
			
			//console.log("k = " , k , "v = ", v)	;
						
			$('.timeline' + data.typeId + ' .divBox ul').prepend('<li class="list-group-item" style="background-color:#E5E7EA;margin-bottom:5px"><img src="'+v.friend.imagepath+'" width="30px" height="30px" style="margin-right:5px" class="img-circle"><h6 style="margin-right:5px"><strong>'+v.friend.name+' </strong></h6><i> '+v.comments.comment+'</i></li>')	
			});
			
			if(response.showMore){
			
			$('.timeline' + data.typeId + ' .viewAll').css('display','inline');
			}
	}		
	else {
			$('.timeline' + data.typeId + ' .divBox').css('display','none');
			$('.timeline' + data.typeId + ' .divBox ul').html('');
			
	}
	
		
						
	}
	function postComment(data, extraInfo, response){
		$('.timeline' + data.typeId + ' .divBox textarea').val('');
		$('.timeline' + data.typeId + ' .divBox ul').html('');
		$('.timeline' + data.typeId + ' .divBox').css('display','none');
		ajaxRequest("showcomments",'POST',data,{dataType:'json', callback:commentBox});
	}
	function allComment(data, extraInfo, response){
	$.each(response.commentList, function(k, v){
			console.log(response)
			//console.log("k = " , k , "v = ", v)	;
						
			$('.allcomments').append('<li class="list-group-item" style="background-color:#E5E7EA;margin-bottom:5px"><img src="'+v.friend.imagepath+'" width="30px" height="30px" style="margin-right:5px" class="img-circle"><h6 style="margin-right:5px"><strong>'+v.friend.name+' </strong></h6><i> '+v.comments.comment+'</i></li>')	
			});
			
			if($('.allcomments .showMore').length>0)
			$('.allcomments .showMore').remove();
			if(response.showMore){
			$('.allcomments').append('<li class="list-group-item showMore" style="background-color:#E5E7EA;margin-bottom:5px"><a href="#" onclick="ajaxRequest(\'showcomments\',\'POST\', {typeId:\''+data.typeId+'\', skip:\''+response.skip+'\',limit:\''+response.limit+'\'},{dataType:\'json\',callback:allComment})">Show More</a></li>');
			}
	}
	$('.close').click(function(){
	
	$('.allcomments').empty();
	});
	function heartIncrease(data,extraInfo,response){
	console.log(data);
	console.log(response)
	if(!response.remove){
		if(!data.broken){
			if(response.revert){
				//$('.heart i').removeClass('fa-heart-o');
				//$('.heart i').addClass('fa-heart');
				
				$('.timeline' + data.typeId + ' .heartBreak i').replaceWith('<div data-icon="X" class="linea-icon linea-basic"></div>');
				if(response.brokenCount < 2){
					$('.timeline' + data.typeId + ' .heartBreakCount').text(response.brokenCount + ' Heartbreak')
				}
				else{
					$('.timeline' + data.typeId + ' .heartBreakCount').text(response.brokenCount + ' Heartbreaks')
				}
			}
			
			$('.timeline' + data.typeId + ' .heart i').removeClass('fa-heart-o');
			$('.timeline' + data.typeId + ' .heart i').addClass('fa-heart');
			
			if(response.heartCount < 2){
				$('.timeline' + data.typeId + ' .heartCount').text(response.heartCount + ' Heart')
			}
			else{
				$('.timeline' + data.typeId + ' .heartCount').text(response.heartCount + ' Hearts')
			}
		}
		else{
		if(response.revert){
			$('.timeline' + data.typeId + ' .heart i').addClass('fa-heart-o');
			$('.timeline' + data.typeId + ' .heart i').removeClass('fa-heart');
			if(response.heartCount < 2){
				$('.timeline' + data.typeId + ' .heartCount').text(response.heartCount + ' Heart')
			}
			else{
				$('.timeline' + data.typeId + ' .heartCount').text(response.heartCount + ' Hearts')
			}
		}
		
		$('.timeline' + data.typeId + ' .heartBreak div').replaceWith('<i class="mdi mdi-heart-broken"></i>');
	
			if(response.brokenCount < 2){
				$('.timeline' + data.typeId + ' .heartBreakCount').text(response.brokenCount + ' Heartbreak')
			}
			else{
				$('.timeline' + data.typeId + ' .heartBreakCount').text(response.brokenCount + ' Heartbreaks')
			}
		}
		}
	else{
		if(!data.broken){
			
			$('.timeline' + data.typeId + ' .heart i').addClass('fa-heart-o');
			$('.timeline' + data.typeId + ' .heart i').removeClass('fa-heart');
			if(response.heartCount < 2){
				$('.timeline' + data.typeId + ' .heartCount').text(response.heartCount + ' Heart')
			}
			else{
				$('.timeline' + data.typeId + ' .heartCount').text(response.heartCount + ' Hearts')
			}
		}
		else{
			$('.timeline' + data.typeId + ' .heartBreak i').replaceWith('<div data-icon="X" class="linea-icon linea-basic"></div>');
			if(response.brokenCount < 2){
				$('.timeline' + data.typeId + ' .heartBreakCount').text(response.brokenCount + ' Heartbreak')
			}
			else{
				$('.timeline' + data.typeId + ' .heartBreakCount').text(response.brokenCount + ' Heartbreaks')
			}
		}
		}
		}
		function heartFriend(data,extraInfo,response){
		$.each(response.friendList, function(k, v){
		console.log(v);
		console.log(data);
		$('.allfriends').append('<li class="list-group-item" style="background-color:#E5E7EA;margin-bottom:5px"><img src="'+v.friend.imagepath+'" width="30px" height="30px" style="margin-right:5px" class="img-circle"><h6 style="margin-right:5px"><strong>'+v.friend.name+' </strong></h6></li>')	
			});
			
			if($('.allfriends .showMore').length>0)
			$('.allfriends .showMore').remove();
			if(response.showMore){
			$('.allfriends').append('<li class="list-group-item showMore" style="background-color:#E5E7EA;margin-bottom:5px"><a href="#" onclick="ajaxRequest(\'showcomments\',\'POST\', {typeId:\''+data.typeId+'\', skip:\''+response.skip+'\'},{dataType:\'json\',callback:heartFriend})">Show More</a></li>');
			}
	}
	$('.close').click(function(){
	
	$('.allfriends').empty();
	});
		
	function onlineFriends(data,extraInfo,response){
	
	$.each(response.friendList, function(k, v){
	console.log(v)
	var i = 1;
	$('.rightbarchat').append('<div class="col p-0 card m-0 waves-effect waves-dark" id="card'+v.id+'" style="width:230px"><div class="col  card-header waves-effect" id="friend'+v.id+'" style="padding-right:8px"> <a class="card-link" data-toggle="collapse" href="#collapse'+v.id+'" id="online'+v.id+'" onclick="ajaxRequest(\'friendchatwindow\', \'POST\', {fid:\''+v.id+'\',window:\'false\'}, {dataType:\'json\', callback:chatOpen})"><img src="'+v.imagepath+'" alt="user-img" class="img-circle"> <span>'+v.name+'</span></a><a href="friendchatwindow?fid='+v.id+'&window=true"><i class="mdi mdi-arrow-expand pull-right" style="color:black"></i></a></div><div id="collapse'+v.id+'" class="collapse chatcard p-0 m-0" data-parent="#accordion" style="width:230px;word-wrap:break-word"><div class="card-body p-0 body'+v.id+'" style="max-height:210px;width:230px;word-wrap:break-word"><div class="chat-rbox"><div class="slimscrollright" style="word-wrap:break-word"><ul class="chat-list p-20 textlist'+v.id+'"></ul></div></div></div><div class="card-body b-t mb-0" style="width:200px"><div class="row"><div class="col-10 pr-0 mr-0"><textarea placeholder="Type your message here" class="form-control b-t chat-area'+v.id+'" onclick="ajaxRequest(\'msgread\',\'POST\', {fid:\''+v.id+'\'}, {dataType:\'json\', callback:msgRead})" rows=2></textarea></div><div class="col-2 text-right p-0 m-0"><button type="button" class="btn btn-info btn-circle btn-sm mt-2 p-1 pt-2 pb-2" onclick="ajaxRequest(\'sendmessage\',\'POST\', {fid:\''+v.id+'\',text:$(\'.chat-area'+v.id+'\').val()}, {dataType:\'json\', callback:messageSentFromSidebar})"><i class="fa fa-paper-plane-o"></i> </button></div></div></div></div></div>');
	
	if(v.chat>0){
	$('#friend'+v.id).append('<span class="badge badge-danger pull-right">'+v.chat+'</span>');
	$('#card'+v.id).css("box-shadow","-5px -5px 15px 5px #ccc");
	}
	$('.textlist'+v.id).slimScroll({
		height: '210px'
		
	});	
	});
	}
	$('.close-chat').click(function(){
	$('.rightbarchat').empty();
	});
	
	$(".rightbarchat").click(function(){	
	$('.rightbarchat .card-header').each(function(){
	$(this).css('background-color','#fff');
	});
	});
	
	function chatOpen(data,extraInfo,response){
	console.log(data,response);
	
	$('#friend'+response.fid+' .badge').remove();
	$('#card'+response.fid).css("box-shadow","0px 0px 0px 0px");
	
	if(!($('#online'+response.fid).hasClass("collapsed"))){
	$('#friend'+response.fid).css('background-color','gray');
	}
	else{
	$('#friend'+response.fid).css('background-color','#fff');
	}
	
	if(response.mychat.length==0){
	$('.textlist'+response.fid).append('<p class="small">Start chat with <a href="friendprofile?fid='+response.fid+'">'+response.userFriend.name+'</a></p>');
	}
	$.each(response.mychat, function(k, v){
	//if($(".body"+response.fid).height()<200){
	
	if(v.me==true){
	$('.textlist'+response.fid).append('<li class="mytext m-0"><div class="row" style="word-wrap:break-word"><div class="pull-left mb-0"><img src='+response.loggedInUser.imagepath+' alt="user" class="rounded-circle p-1" style="width:35px;height:35px;position:relative;left:20px;z-index:999999;"/></div>'+
	'<div class="chat-content m-0 mb-1"><div class="box bg-light-info m-0" style="border-radius:20px 0px 0px 0px;max-width: 150px;position:relative;right:40px"><span class="small" style="padding-left:30px">'+v.text+'</span></div><div class="chat-time m-0 p-0">'+moment(v.sentAt).format('hh:mm a')+'</div></div></div>'+
	'</li>')
	}
	else{
	
	$('.textlist'+response.fid).append('<li class="reverse"><div class="row" style="word-wrap:break-word"><div class="chat-content m-0 mb-1" style="word-wrap:break-word"><div class="chat-time m-0" style="position:relative;right:-40px">'+moment(v.deliveredAt).format('hh:mm a')+'</div><div class="box bg-light-inverse m-0" style="background-color:#E4D8F2;position:relative;left:130px;max-width:150px;border-radius:0px 20px 0px 0px;word-wrap:break-word"><span class="small pt-0 m-0 pull-left" style="padding-right:30px;word-wrap:break-word">'+v.text+'</span></div></div><div class="pull-right pr-0 m-0"><img src="'+response.userFriend.imagepath+'" alt="friend" class="rounded-circle p-1" style="width:35px;height:35px;position:relative;top:25px;left:80px"/></div></div></li>');
	}
	
	});
	
	//alert($(".body"+response.fid).height());
	$('.chat-time').each(function(){
var me = $(this);
var oldValue = moment($(me).text(),'ddd MMM DD hh:mm:ss IST yyyy');

if(moment(oldValue,'ddd MMM DD hh:mm:ss IST yyyy').isValid()){
$(me).text(oldValue.format('hh:mm a'));
}

});

	}
	function msgRead(data,extraInfo,response){
	$('#card'+data.fid).css("box-shadow","0px 0px 0px 0px");
	}
	function messageSent(data,extraInfo,response){
	console.log(data);
	console.log(response);
		$('.chat-area').val('');
		$('.textlist').append('<li class="p-0 m-0"><div class="chat-img"><img src="/{{#loggedInUser}}{{imagepath}}{{/loggedInUser}}" alt="user" /></div><div class="box bg-light-info" style="margin-right:100px;border-radius:20px 10px 10px 0px"><div class="chat-content"><span class="small">'+data.text+'</span></div></div><div class="chat-time">'+moment().format('hh:mm a')+'</div></li>')
	}
	function messageSentFromSidebar(data,extraInfo,response){
	console.log(data);
	console.log(response);
		$('.chat-area'+data.fid).val('');
		$('.textlist'+data.fid).append('<li class="mytext m-0 p-0"><div class="chat-content"><div class="chat-time">'+moment().format('hh:mm a')+'</div><div class="box bg-light-info small"><span class="small">'+data.text+'</span></div></div></li>')
	}
	

</script>


<script>
var reference;
		 function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
	  reference='fb';
      testAPI();
	  var accessToken = response.authResponse.accessToken;
    } else {
      // The person is not logged into your app or we are unable to tell.
     
		reference='';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
	  console.log(response);
    });
  }
$(document).ready(function(){
	


  window.fbAsyncInit = function() {
    FB.init({
      appId      : '656727884666308',
       // enable cookies to allow the server to access 
       // cookies:true,                  // the session
      xfbml      : true,  // parse social plugins on this page
      version    : 'v2.8' // use graph api version 2.8
    });

    // Now that we've initialized the JavaScript SDK, we call 
    // FB.getLoginStatus().  This function gets the state of the
    // person visiting this page and can return one of three states to
    // the callback you provide.  They can be:
    //
    // 1. Logged into your app ('connected')
    // 2. Logged into Facebook, but not your app ('not_authorized')
    // 3. Not logged into Facebook and can't tell if they are logged into
    //    your app or not.
    //
    // These three cases are handled in the callback function.

    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
	  console.log(response);
    });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  
});
	function testAPI() {
		
    console.log('Welcome!  Fetching your information.... ');
	
    FB.api('/me', {fields: 'first_name,last_name,name,email,gender,picture,birthday'},function(response) {
      console.log('Successful login for: ' + response.name , "response ", response);
      var id=response.id;
	  var fname=response.first_name;
	  var lname=response.last_name;
	  var email=response.email;
	  var gender=response.gender;
	  var birthday=response.birthday;
	  var picUrl=response.picture.data.url
	 
	  console.log(response.email);
	
	// window.location = '/webProject1/register';
	

var request = $.ajax({
	url: "signin?reference=fb&referenceId="+id,
	method: "POST",
	 
	dataType: "json"
	
	
	 });
	request.done(function(response) {
	  
    console.log( "success ", response );
  
	if(response.register){
$('#fname').val(fname);
$('#lname').val(lname);
$('#email').val(email);
$('#dob').val(birthday);

$('input[value='+gender+']').prop('checked',true);
	$('#reference').val('fb');
	$('#referenceId').val(id);
	$('#picUrl').val(picUrl);
	
	if(window.location!="http://localhost:8080/frenz4/register"){
	window.location = 'register';
	}
	}
	else
		if(window.location=="http://localhost:8080/frenz4/login")
	window.location = '/frenz4/friendactivity';

	
  })
  request.fail(function(response) {
    console.log( "error ", response );
  })
  request.always(function(response) {
    console.log( "complete ", response );
	
  });
 

});
    }

	function logout(){
	
	
	
		var status = FB.getLoginStatus()
		
		if(reference=='fb'){
		
		FB.logout(function(response) {
	
	var request = $.ajax({
	url: "logout?reference="+reference,
	
	method: "POST"
	 
	
	
	 });
	request.done(function(response){
		if(reference=='fb')
		window.location="/frenz4/friendactivity";
	console.log( "success ", response );
	});
	 });
		}
		else{
		var request = $.ajax({
	url: "logout",
	
	method: "POST"
	 
	
	
	 });
	request.done(function(response){
		if(reference=='fb')
		window.location="/webProject1"
	console.log( "success ", response );
	});
	 }
  
	}
	</script>
	<script>
	
 $(document).ready(function() {
               
                    longPolling.stop = false;
                   longPolling.poll();
                
                $("#stopPolling").click(function(event) {
                    event.preventDefault();
                    longPolling.stop = true;
                });
            });
 
            var longPolling = {
                stop: false,
                poll: function() {
                    if (longPolling.stop === true) {
                        console.log("Stopping the long polling process");
                        return;
                    }
                    $.ajax(
                            {
                                type: 'POST',
                                url: "checkmessage",
                                data: {},
                                //contentType: "application/json; charset=utf-8",
                                dataType: "json",
								
                                // crossDomain: true,
                                //timeout: 50000
                            }
                    ).done(function(data, textStatus, jqXHR,a) {
					console.log("data ",data);
					
					
					
					if(data.chatList.length > 0){
					if($('.chat-btn .badge').length==0){
					i=2;
					$('.chat-btn').append('<div class="badge badge-info">1</div>');
					}
					else{
					
					$('.chat-btn .badge').text(i);
					i++;
					}
					$.each(data.chatList,function(k,v){
					
					console.log(k,v);
					
							if(v.sender=="{{#userFriend}}{{id}}{{/userFriend}}"){
						

								$('.textlist').append('<li class="reverse"><div class="chat-time">'+moment(v.sentAt, 'MMM DD, YYYY hh:mm:ss A').format('hh:mm a')+'</div><div class="box bg-light-inverse" style="margin-left:100px;border-radius:10px 0px 10px 10px;background-color:#E4D8F2"><div class="chat-content"><span class="small">'+v.text+'</span></div></div><div class="chat-img"><img src="'+v.friend[0].imagepath+'" alt="user" /></div></li>');
							
							}
							else if(!$('#online'+v.sender).hasClass("collapsed")) {
							
							
							$('#card'+v.sender).css("box-shadow","-5px -5px 15px 5px #ccc");
							$('.textlist'+v.sender).append('<li class="reverse m-0 p-0"><div class="chat-time">'+moment(v.deliveredAt).format('hh:mm a')+'</div><div class="box bg-light-inverse small" style="margin-left:100px;border-radius:10px 0px 20px 10px;background-color:#E4D8F2"><div class="chat-content"><span class="small">'+v.text+'</span></div></div></li>');
	
							}
							else{
							
							count = $('#friend'+v.sender+' .badge').text();
							//console.log('ggg',count)
							if(count!=''){
							count = parseInt(count);
							count = count + 1;
							}
							else{
							count = 1;
							}
							//console.log('bb',$('#friend'+v.sender+' a .badge').text());
							console.log('ff',$('#friend'+v.sender+' .badge'))
							console.log($('#friend'+v.sender+' .badge').length)
							if($('#friend'+v.sender+' .badge').length==0){
							$('#friend'+v.sender).append('<span class = "badge l badge-danger pull-right" style="z-index:999999">'+count+'</span>');
						//	$('#friend'+v.sender).prepend('<i class="mdi mdi-message pull-left"></i>');
								var count = $('#card'+v.sender+' .badge').text();
								$('#card'+v.sender).css("box-shadow","-5px -5px 15px 5px #ccc");
							}
							else{
							$('#friend'+v.sender+' .badge').text(count);
							}
							
							
	}
                     });
					}
						
						
                    }).fail(function(jqxhr, textStatus, errorThrown) {
                        console.log("jqxhr.statusText: " + jqxhr.statusText);
                        console.log("status: " + jqxhr.status);
                        console.log("textStatus: " + textStatus); //null, "timeout", "error", "abort", and "parsererror"
                        console.log("errorThrown: " + errorThrown);
                    }).always(longPolling.poll);
                }
            };
			
			
			
</script>
<script src="js/myjs.js"></script>